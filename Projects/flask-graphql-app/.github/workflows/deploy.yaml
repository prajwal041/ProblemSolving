name: Deploy to EKS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: flask-api
  EKS_CLUSTER: flask-api-cluster
  KUBE_NAMESPACE: default

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade-pip
        pip install -r requirements.txt
    - name: Upload coverage
      uses: codecov/codecov-action@v3

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-admin: ${{ secrets.AWS_IAM_ROLE }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag and push
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
    - name: Configure kubeconfig
      run: |
        aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER
    - name: Deploy to EKS
      run: |
        sed -i "s|{{IMAGE}}|${{ steps.build-image.outputs.image }}|g" kubernetes/deployment.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml
        kubectl apply -f kubernetes/hpa.yaml
        
        kubectl rollout status deployment/flask-api -n $KUBE_NAMESPACE
        kubectl get pods -n $KUBE_NAMESPACE